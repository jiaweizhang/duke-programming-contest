swagger: "2.0"
info:
  version: 1.0.0
  title: DPC API
  description: Duke Programming Contest API
host: localhost
schemes:
  - http
consumes:
  - application/json
basePath: /api
produces:
  - application/json
paths:
  /groups/join/{contest}:
    post:
      summary: Join a group for a contest
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
        - name: body
          in: body
          schema:
            properties:
              secret:
                type: string
                description: Secret key known by group members
      responses:
        200:
          description: Successfully joined
  /groups/create/{contest}:
    post:
      summary: Create a group for a contest
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
        - name: body
          in: body
          schema:
            properties:
              name:
                type: string
                description: Group name
              secret:
                type: string
                description: Secret key known by group members
      responses:
        200:
          description: Successfully created
  /groups/leave/{contest}:
    post:
      summary: Leave group for a contest
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
      responses:
        200:
          description: Successfully left contest group
  /submit/{contest}/{number}:
    post:
      summary: Submit code with solution
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
        - name: number
          in: path
          description: Problem number within contest
          required: true
          type: number
        - name: body
          in: body
          schema:
            properties:
              code:
                type: array
                items:
                  type: string
              solution:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Successfully submitted
          schema:
            $ref: '#/definitions/Submission'
  /submissions/{contest}:
    get:
      summary: Get submission history
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
      responses:
        200:
          description: Successfully retrieved submissions
          schema:
            $ref: '#/definitions/Submissions'
  /problems/{contest}:
      get:
        summary: Receive list of problem titles and other data
        parameters:
          - name: contest
            in: path
            description: Contest contestId
            required: true
            type: string
        responses:
          200:
            description: Successfully retrieved
            schema:
              $ref: '#/definitions/Problems'
  /problems/{contest}/{number}:
    get:
      summary: Receive problem statement
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
        - name: number
          in: path
          description: Problem number
          required: true
          type: number
      responses:
        200:
          description: Successfully retrieved
          schema:
            $ref: '#/definitions/Problem'
  /scoreboard/{contest}:
    get:
      summary: Retrieve contest scoreboard
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
      responses:
        200:
          description: Successfully retrieved
          schema:
            $ref: '#/definitions/Scoreboard'
  /contests:
    get:
      summary: Retrieve contests
      responses:
        200:
          description: Successfully retrieved
          schema:
            $ref: '#/definitions/Contests'
  /contests/{contest}:
    get:
      summary: Retrieve contest
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
      responses:
        200:
          description: Successfully retrieved
          schema:
            $ref: '#/definitions/Contest'
  /contests/join/{contest}:
    get:
      summary: Join contest
      parameters:
        - name: contest
          in: path
          description: Contest contestId
          required: true
          type: string
      responses:
        200:
          description: Successfully joined contest
definitions:
  Submissions:
    properties:
      submissions:
        type: array
        items:
          $ref: '#/definitions/Submission'
  Submission:
    properties:
      submissionId:
        type: string
        description: Unique contestId representing a submission
      netId:
        type: string
        description: ID of person who submitted
      timestamp:
        type: string
        description: Time of submission
      result:
        type: string
        enum: ["correct", "incorrect", "whitespace", "emptyfile", "toolarge"]
        description: The correctness of the submission
  Problems:
    properties:
      problems:
        type: array
        items:
          $ref: '#/definitions/PartialProblem'
  PartialProblem:
    properties:
      title:
        type: string
        description: Problem title
      number:
        type: number
        description: Problem number
  Problem:
    properties:
      title:
        type: string
        description: Problem title
      number:
        type: number
        description: Problem number
      statement:
        type: string
        description: HTML problem statement
      examples:
        type: array
        items:
          $ref: '#/definitions/Example'
  Example:
    properties:
      input:
        type: array
        items:
          type: string
        description: Example input
      output:
        type: array
        items:
          type: string
        description: Example output
  Scoreboard:
    properties:
      team:
        type: array
        items:
          $ref: '#/definitions/TeamScore'
  TeamScore:
    properties:
      name:
        type: string
        description: Team name
      totalPoints:
        type: number
        description: Total points scored
      penalty:
        type: number
        description: Total penalty
      problemTimes:
        type: array
        description: Penalty for each problem
        items:
          type: number
  Contests:
    properties:
      contests:
        type: array
        items:
          $ref: '#/definitions/Contest'
  Contest:
    properties:
      contestId:
        type: string
        description: Unique contestId
      name:
        type: string
        description: Contest official name
      startDate:
        type: string
        format: dateTime
        description: Start date and time
      duration:
        type: number
        description: Duration in minutes